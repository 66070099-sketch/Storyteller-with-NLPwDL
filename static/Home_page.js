// ====== elements ======
const slider = document.querySelector('.slider');
const sliderList = slider.querySelector('.slider .list');

// ====== state ======
let __currentIndex = 1;          // ‡πÅ‡∏´‡∏•‡πà‡∏á‡∏Ñ‡∏ß‡∏≤‡∏°‡∏à‡∏£‡∏¥‡∏á‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô
let __isDragging = false;        // ‡∏£‡∏∞‡∏´‡∏ß‡πà‡∏≤‡∏á‡∏•‡∏≤‡∏Å‡∏≠‡∏¢‡∏π‡πà‡πÑ‡∏´‡∏°
let __programmatic = false;      // ‡πÄ‡∏£‡∏≤‡πÄ‡∏õ‡πá‡∏ô‡∏Ñ‡∏ô‡∏™‡∏±‡πà‡∏á‡πÄ‡∏•‡∏∑‡πà‡∏≠‡∏ô‡πÄ‡∏≠‡∏á‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà (‡∏Å‡∏±‡∏ô onCycleTo ‡∏ã‡πâ‡∏≥)
let __syncTimer = null;

// ====== helpers ======
function getCurrentSlideIndex() {
  const first = sliderList.querySelector('.item');
  return first ? Number(first.getAttribute('data-index')) || 1 : 1;
}

function commitSelection(idx) {
  if (!idx || idx === __currentIndex) return;

  sliderList.querySelectorAll('.item').forEach(el => {
    const isActive = Number(el.getAttribute('data-index')) === idx;
    el.style.opacity = isActive ? "1" : "0";
    el.style.zIndex  = isActive ? "1" : "-1";   // ‚úÖ ‡πÑ‡∏°‡πà‡πÉ‡∏´‡πâ‡∏°‡∏≤‡∏ö‡∏±‡∏á‡∏Ñ‡∏•‡∏¥‡∏Å
    el.classList.toggle("active", isActive);
  });

  __currentIndex = idx;
}

// function openStory(index) {
//   const base = window.location.origin;  // ‡πÉ‡∏ä‡πâ base URL ‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô‡∏Ç‡∏≠‡∏á‡πÄ‡∏ß‡πá‡∏ö‡πÑ‡∏ã‡∏ï‡πå
//   const url = `${base}/Tales40_web/story${index}/Tales.html`;  // ‡πÄ‡∏û‡∏¥‡πà‡∏° path ‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡πÑ‡∏õ
//   window.location.assign(url);
// }

function centerCarouselTo(idx) {
  const inst = window.__materializeCarousel__;
  if (!inst) return;

  const carEl = document.getElementById('story-carousel');
  const items = Array.from(carEl.querySelectorAll('.carousel-item'));
  const pos = items.findIndex(a => Number(a.getAttribute('data-index')) === idx);
  if (pos < 0) return;

  try {
    __programmatic = true;    // üîí ‡∏•‡πá‡∏≠‡∏Å‡∏Å‡∏±‡∏ô onCycleTo ‡∏¢‡πâ‡∏≠‡∏ô‡∏Å‡∏•‡∏±‡∏ö
    if (typeof inst.center === 'function') inst.center(pos);
    else if (typeof inst.set === 'function') inst.set(pos);
  } finally {
    // ‡∏õ‡∏•‡∏î‡∏•‡πá‡∏≠‡∏Å‡∏´‡∏•‡∏±‡∏á‡∏ó‡∏£‡∏≤‡∏ô‡∏™‡∏¥‡∏ä‡∏±‡∏ô‡∏à‡∏ö‡πÄ‡∏•‡πá‡∏Å‡∏ô‡πâ‡∏≠‡∏¢ (‡∏≠‡∏¥‡∏á duration ‡∏Ç‡∏≠‡∏á carousel)
    const duration = (window.__carouselDurationMs || 160) + 40;
    setTimeout(() => { __programmatic = false; }, duration);
  }
}

// ‡πÉ‡∏´‡πâ‡∏™‡πÑ‡∏•‡∏î‡πå‡πÉ‡∏´‡∏ç‡πà ‚Üî carousel ‡∏ï‡∏£‡∏á‡∏Å‡∏±‡∏ô (‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏à‡∏≥‡πÄ‡∏õ‡πá‡∏ô‡πÄ‡∏ó‡πà‡∏≤‡∏ô‡∏±‡πâ‡∏ô)
function syncCarouselToCurrent() {
  centerCarouselTo(__currentIndex);
}

// ====== public: ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏†‡∏≤‡∏û (‡∏Ñ‡∏•‡∏¥‡∏Å/‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á) ======
function showSlide(targetIdx) {
  if (!targetIdx) return;
  // 1) ‡∏Ñ‡∏≠‡∏°‡∏°‡∏¥‡∏ï index ‚Üí ‡∏¢‡πâ‡∏≤‡∏¢‡∏™‡πÑ‡∏•‡∏î‡πå‡πÉ‡∏´‡∏ç‡πà
  commitSelection(targetIdx);
  // 2) ‡∏à‡∏±‡∏î carousel ‡πÉ‡∏´‡πâ‡∏ä‡∏µ‡πâ‡πÑ‡∏õ‡∏¢‡∏±‡∏á‡∏≠‡∏±‡∏ô‡πÄ‡∏î‡∏µ‡∏¢‡∏ß‡∏Å‡∏±‡∏ô
  syncCarouselToCurrent();
}

// ====== drag lifecycle ======
function attachDragLifecycle() {
  const carEl = document.getElementById('story-carousel');
  if (!carEl) return;

  const setDragging = v => { __isDragging = v; };

  carEl.addEventListener('pointerdown', () => setDragging(true), { passive: true });
  carEl.addEventListener('mousedown',   () => setDragging(true), { passive: true });
  carEl.addEventListener('touchstart',  () => setDragging(true), { passive: true });

  const endDrag = () => {
    setDragging(false);
    clearTimeout(__syncTimer);

    // ‡∏£‡∏≠ inertia ‡∏à‡∏ö‡∏™‡∏±‡πâ‡∏ô‡πÜ ‡πÅ‡∏•‡πâ‡∏ß‡∏Ñ‡πà‡∏≠‡∏¢‡∏Ñ‡∏≠‡∏°‡∏°‡∏¥‡∏ï active ‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô
    __syncTimer = setTimeout(() => {
      const active = carEl.querySelector('.carousel-item.active');
      const idx = Number(active?.getAttribute('data-index')) || null;
      if (!idx) return;

      // ‡∏Ñ‡∏≠‡∏°‡∏°‡∏¥‡∏ï ‚Üí ‡∏¢‡πâ‡∏≤‡∏¢‡∏™‡πÑ‡∏•‡∏î‡πå‡πÉ‡∏´‡∏ç‡πà
      commitSelection(idx);
      // ‡πÅ‡∏•‡πâ‡∏ß‡∏•‡πá‡∏≠‡∏Å‡πÄ‡∏•‡πá‡∏Å‡∏ô‡πâ‡∏≠‡∏¢ ‡∏Å‡∏±‡∏ô onCycleTo ‡∏ó‡∏µ‡πà‡∏¢‡∏±‡∏á‡∏´‡∏•‡∏á‡πÄ‡∏´‡∏•‡∏∑‡∏≠
      syncCarouselToCurrent();
    }, 120);
  };

  ['pointerup','mouseup','mouseleave','touchend','touchcancel']
    .forEach(ev => carEl.addEventListener(ev, endDrag, { passive: true }));
}

// ====== onCycleTo handler (‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡∏à‡∏≤‡∏Å init) ======
function handleCycleTo(el, dragged) {
  if (!el) return;
  if (__programmatic) return;  // ‡πÄ‡∏£‡∏≤‡πÄ‡∏õ‡πá‡∏ô‡∏Ñ‡∏ô‡∏™‡∏±‡πà‡∏á‡πÄ‡∏•‡∏∑‡πà‡∏≠‡∏ô‡πÄ‡∏≠‡∏á ‚Üí ‡πÑ‡∏°‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏ó‡∏≥‡∏≠‡∏∞‡πÑ‡∏£
  if (__isDragging)  return;   // ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏•‡∏≤‡∏Å ‚Üí ‡∏£‡∏≠ endDrag ‡∏Ñ‡πà‡∏≠‡∏¢‡∏Ñ‡∏≠‡∏°‡∏°‡∏¥‡∏ï

  // ‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏•‡∏≤‡∏Å ‡πÅ‡∏•‡∏∞‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πà‡∏Å‡∏≤‡∏£‡∏™‡∏±‡πà‡∏á‡πÄ‡∏≠‡∏á ‚Üí ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÄ‡∏û‡∏£‡∏≤‡∏∞‡∏Ñ‡∏•‡∏¥‡∏Å/‡∏Ñ‡∏µ‡∏¢‡πå/‡∏•‡∏π‡∏Å‡∏®‡∏£
  const idx = Number(el.getAttribute('data-index')) || null;
  if (!idx) return;

  // ‡∏Ñ‡∏≠‡∏°‡∏°‡∏¥‡∏ï‡πÅ‡∏•‡∏∞‡∏ã‡∏¥‡∏á‡∏Å‡πå (‡πÉ‡∏ä‡πâ‡∏î‡∏µ‡πÄ‡∏•‡∏¢‡πå‡∏™‡∏±‡πâ‡∏ô‡∏Å‡∏±‡∏ô‡∏≠‡∏µ‡πÄ‡∏ß‡∏ô‡∏ï‡πå‡∏ï‡∏¥‡∏î‡∏Å‡∏±‡∏ô‡∏´‡∏•‡∏≤‡∏¢‡∏ï‡∏±‡∏ß)
  clearTimeout(__syncTimer);
  __syncTimer = setTimeout(() => {
    commitSelection(idx);
    syncCarouselToCurrent();
  }, dragged ? 60 : 40);
}

// ====== click to jump ======
function attachClickToJump() {
  const carEl = document.getElementById('story-carousel');
  if (!carEl) return;

  // ‡∏Å‡∏±‡∏ô‡∏£‡∏π‡∏õ‡∏ñ‡∏π‡∏Å‡∏•‡∏≤‡∏Å‡∏≠‡∏≠‡∏Å‡∏ô‡∏≠‡∏Å‡∏´‡∏ô‡πâ‡∏≤
  carEl.querySelectorAll('img').forEach(img => {
    img.setAttribute('draggable', 'false');
  });

  carEl.addEventListener('click', (e) => {
    const a = e.target.closest('.carousel-item');
    if (!a) return;
    e.preventDefault();

    const target = Number(a.getAttribute('data-index')) || null;
    if (!target) return;

    // ‡∏à‡∏±‡∏î carousel ‡πÑ‡∏õ‡∏¢‡∏±‡∏á‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á‡∏ô‡∏±‡πâ‡∏ô‡∏Å‡πà‡∏≠‡∏ô (‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏´‡∏¢‡∏∏‡∏î inertia ‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô)
    centerCarouselTo(target);

    // ‡πÅ‡∏•‡πâ‡∏ß‡∏Ñ‡∏≠‡∏°‡∏°‡∏¥‡∏ï‡∏™‡πÑ‡∏•‡∏î‡πå‡πÉ‡∏´‡∏ç‡πà + ‡∏ã‡∏¥‡∏á‡∏Å‡πå‡∏¢‡πâ‡∏≠‡∏ô‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ï‡∏≠‡∏Å‡∏¢‡πâ‡∏≥
    clearTimeout(__syncTimer);
    __syncTimer = setTimeout(() => {
      commitSelection(target);
      syncCarouselToCurrent();
    }, 80);
  });
}

// ====== boot ======
document.addEventListener('DOMContentLoaded', () => {
  // ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ index ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡∏à‡∏≤‡∏Å DOM ‡∏à‡∏£‡∏¥‡∏á
  __currentIndex = getCurrentSlideIndex();

  attachDragLifecycle();
  attachClickToJump();

  // export ‡∏ñ‡πâ‡∏≤‡∏ï‡πâ‡∏≠‡∏á‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡∏à‡∏≤‡∏Å‡∏ó‡∏µ‡πà‡∏≠‡∏∑‡πà‡∏ô
  window.showSlide = showSlide;
  window.handleCycleTo = handleCycleTo;
});

// ‡πÄ‡∏õ‡∏¥‡∏î‡∏´‡∏ô‡πâ‡∏≤‡πÄ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏î‡πâ‡∏ß‡∏¢‡∏û‡∏≤‡∏ò‡∏à‡∏≤‡∏Å‡∏£‡∏≤‡∏Å‡πÄ‡∏ß‡πá‡∏ö (‡∏Å‡∏±‡∏ô path relative ‡πÄ‡∏û‡∏µ‡πâ‡∏¢‡∏ô)
function openStory(index) {
  const base = window.location.origin;  // ‡πÄ‡∏ä‡πà‡∏ô http://127.0.0.1:8000
  const url  = `${base}/backend/Tales40_web/story${index}/Tales.html`;
  window.location.assign(url);
}
function playSfx(id){const el=document.getElementById(id);if(!el)return;try{el.currentTime=0;el.play();}catch(e){}}

// ‡∏ü‡∏≠‡∏á‡∏™‡∏ö‡∏π‡πà
function spawnBubble() {
  const c = document.getElementById("bubbles");
  if (!c) return;
  const b = document.createElement("div");
  b.className = "bubble";
  const size = Math.random() * 40 + 10;
  b.style.width = b.style.height = `${size}px`;
  b.style.left = `${Math.random() * 100}vw`;
  b.style.animationDuration = `${6 + Math.random() * 6}s`;
  b.style.filter = `blur(${Math.random() * 1.2}px)`;
  c.appendChild(b);
  setTimeout(() => b.remove(), 13000);
}

document.addEventListener("DOMContentLoaded",()=>{for(let i=0;i<15;i++)spawnBubble(); setInterval(spawnBubble,500);});

// ‡πÄ‡∏û‡∏•‡∏á BG (‡∏ï‡πâ‡∏≠‡∏á‡∏°‡∏µ gesture ‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡πÅ‡∏£‡∏Å)
const bgMusic=document.getElementById("bg-music");
const musicToggle=document.getElementById("music-toggle");
function tryAutoplayOnce() {
  if (!bgMusic || !bgMusic.paused) return;
  bgMusic.play().then(() => {
    if (musicToggle) musicToggle.textContent = "üîá Mute";
    window.removeEventListener('pointerdown', tryAutoplayOnce);
    window.removeEventListener('keydown', tryAutoplayOnce);
    window.removeEventListener('touchstart', tryAutoplayOnce);
  }).catch(() => {});
}

window.addEventListener('pointerdown',tryAutoplayOnce);
window.addEventListener('keydown',tryAutoplayOnce);
window.addEventListener('touchstart',tryAutoplayOnce);

if (musicToggle && bgMusic) {
  musicToggle.addEventListener("click", () => {
    if (bgMusic.paused) {
      bgMusic.play();
      musicToggle.textContent = "üîá Mute";
    } else {
      bgMusic.pause();
      musicToggle.textContent = "üîä Music";
    }
  });
}


// ‡πÄ‡∏•‡πà‡∏ô‡πÄ‡∏™‡∏µ‡∏¢‡∏á‡∏ï‡∏≠‡∏ô‡∏Å‡∏î‡∏õ‡∏∏‡πà‡∏°‡πÉ‡∏î‡πÜ
document.addEventListener("click",e=>{
  if(e.target.tagName==="BUTTON" || e.target.closest("button")) playSfx("sfx-click");
});

// ‡πÄ‡∏•‡πà‡∏ô‡πÄ‡∏™‡∏µ‡∏¢‡∏á‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏Ñ‡∏≤‡∏£‡∏π‡πÄ‡∏ã‡∏•‡πÄ‡∏•‡∏∑‡πà‡∏≠‡∏ô
const __origHandleCycleTo = window.handleCycleTo;
window.handleCycleTo = function(el, dragged){
  playSfx("sfx-slide");
  if(typeof __origHandleCycleTo==="function") __origHandleCycleTo(el, dragged);
};

// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô queueMove ‡πÉ‡∏ä‡πâ‡∏Ñ‡∏¥‡∏ß‡∏Å‡∏≤‡∏£‡πÄ‡∏•‡∏∑‡πà‡∏≠‡∏ô‡∏™‡πÑ‡∏•‡∏î‡πå
function queueMove(direction, count) {
  let promiseChain = Promise.resolve();

  // ‡∏™‡∏£‡πâ‡∏≤‡∏á Promise ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡πÄ‡∏•‡∏∑‡πà‡∏≠‡∏ô‡∏´‡∏•‡∏≤‡∏¢‡∏™‡πÑ‡∏•‡∏î‡πå
  for (let i = 0; i < count; i++) {
    promiseChain = promiseChain.then(() => moveSlider(direction));
  }
}

// ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô centerCarouselTo ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ã‡∏¥‡∏á‡∏Å‡πå‡∏Å‡∏±‡∏ö carousel
function centerCarouselTo(idx) {
  const inst = window.__materializeCarousel__;
  if (!inst) return;

  const carEl = document.getElementById('story-carousel');
  const items = Array.from(carEl.querySelectorAll('.carousel-item'));
  const pos = items.findIndex(a => Number(a.getAttribute('data-index')) === idx);
  if (pos < 0) return;

  try {
    __programmatic = true;    // üîí ‡∏•‡πá‡∏≠‡∏Å‡∏Å‡∏±‡∏ô onCycleTo ‡∏¢‡πâ‡∏≠‡∏ô‡∏Å‡∏•‡∏±‡∏ö
    if (typeof inst.center === 'function') inst.center(pos);
    else if (typeof inst.set === 'function') inst.set(pos);
  } finally {
    // ‡∏õ‡∏•‡∏î‡∏•‡πá‡∏≠‡∏Å‡∏´‡∏•‡∏±‡∏á‡∏ó‡∏£‡∏≤‡∏ô‡∏™‡∏¥‡∏ä‡∏±‡∏ô‡∏à‡∏ö‡πÄ‡∏•‡πá‡∏Å‡∏ô‡πâ‡∏≠‡∏¢ (‡∏≠‡∏¥‡∏á duration ‡∏Ç‡∏≠‡∏á carousel)
    const duration = (window.__carouselDurationMs || 160) + 40;
    setTimeout(() => { __programmatic = false; }, duration);
  }
}
